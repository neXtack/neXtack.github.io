<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[我的小栈 | iYOUNG]]></title><description><![CDATA[我的小栈 | iYOUNG 是一个技术开发的博客，专注于Java和JavaScript为主要语言的前后端知识的学习和分享]]></description><link>http://iyoung.xyz</link><generator>RSS for Node</generator><lastBuildDate>Tue, 08 Jun 2021 00:25:08 GMT</lastBuildDate><atom:link href="http://iyoung.xyz/rss.xml" rel="self" type="application/rss+xml"/><copyright><![CDATA[iYoung 2021]]></copyright><language><![CDATA[en]]></language><item><title><![CDATA[【Spring源码学习】0x0E Bean初始化之beanName处理]]></title><description><![CDATA[<h2 id="场景"><a class="header-anchor" href="#场景">#</a> 场景</h2>
<p>在Bean初始化时，调用了<code>getBean(String)</code>方法，传入了一个<code>beanName</code>参数，在定义BeanDefnition时，有<code>id</code>、<code>name</code>、<code>alias</code>，这些都存在了哪里，是怎么分辨的呢？</p>
]]></description><link>http://iyoung.xyz/spring/0x0E.html</link><guid isPermaLink="true">http://iyoung.xyz/spring/0x0E.html</guid><category><![CDATA[Spring]]></category><dc:creator><![CDATA[iYoung]]></dc:creator><pubDate>Mon, 07 Jun 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[【Spring源码学习】0x0D Bean初始化]]></title><description><![CDATA[<h2 id="场景"><a class="header-anchor" href="#场景">#</a> 场景</h2>
<p>通过前面的学习，XML配置文件已经解析成<code>BeanDefinition</code>了，那下面就看看<code>BeanDefinition</code>是如何变成<code>Bean</code>的。
在容器初始化过程中，有个过程就是初始化单例Bean，这个过程是如何初始化Bean的？</p>
]]></description><link>http://iyoung.xyz/spring/0x0D.html</link><guid isPermaLink="true">http://iyoung.xyz/spring/0x0D.html</guid><category><![CDATA[Spring]]></category><dc:creator><![CDATA[iYoung]]></dc:creator><pubDate>Mon, 24 May 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[【Spring源码学习】0x0C BeanDefinition加载之触发事件]]></title><description><![CDATA[<h2 id="场景"><a class="header-anchor" href="#场景">#</a> 场景</h2>
<p>在前面BeanDefinition加载过程的分析中，出现了好多次触发事件的代码，这些事件都有什么，是谁在监听？</p>
]]></description><link>http://iyoung.xyz/spring/0x0C.html</link><guid isPermaLink="true">http://iyoung.xyz/spring/0x0C.html</guid><category><![CDATA[Spring]]></category><dc:creator><![CDATA[iYoung]]></dc:creator><pubDate>Tue, 18 May 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[【Spring源码学习】0x0B BeanDefinition加载之import解析]]></title><description><![CDATA[<h2 id="场景"><a class="header-anchor" href="#场景">#</a> 场景</h2>
<p>现在只剩下<code>import</code>节点了，看看这个是怎么解析的？</p>
]]></description><link>http://iyoung.xyz/spring/0x0B.html</link><guid isPermaLink="true">http://iyoung.xyz/spring/0x0B.html</guid><category><![CDATA[Spring]]></category><dc:creator><![CDATA[iYoung]]></dc:creator><pubDate>Mon, 17 May 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[【Spring源码学习】0x0A BeanDefinition加载之alias解析]]></title><description><![CDATA[<h2 id="场景"><a class="header-anchor" href="#场景">#</a> 场景</h2>
<p>主要的节点已经分析结束了，不过<code>alias</code>也值得拥有姓名，看看<code>alias</code>是如何解析的？</p>
]]></description><link>http://iyoung.xyz/spring/0x0A.html</link><guid isPermaLink="true">http://iyoung.xyz/spring/0x0A.html</guid><category><![CDATA[Spring]]></category><dc:creator><![CDATA[iYoung]]></dc:creator><pubDate>Sun, 16 May 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[【Spring源码学习】0x09 BeanDefinition加载之bean解析]]></title><description><![CDATA[<h2 id="场景"><a class="header-anchor" href="#场景">#</a> 场景</h2>
<p>上文分析了<code>beans</code>节点是怎么解析的，下面的问题就是<code>bean</code>节点的解析，bean节点中那么多属性，还可以嵌套元素，是怎么处理的。</p>
]]></description><link>http://iyoung.xyz/spring/0x09.html</link><guid isPermaLink="true">http://iyoung.xyz/spring/0x09.html</guid><category><![CDATA[Spring]]></category><dc:creator><![CDATA[iYoung]]></dc:creator><pubDate>Fri, 14 May 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[【Spring源码学习】0x08 BeanDefinition加载之beans解析]]></title><description><![CDATA[<h2 id="场景"><a class="header-anchor" href="#场景">#</a> 场景</h2>
<p>看完<code>spring-beans.xsd</code>，就想知道<code>beans</code>节点是怎么解析的，是怎么处理嵌套关系中，层层向上寻找默认配置的。</p>
]]></description><link>http://iyoung.xyz/spring/0x08.html</link><guid isPermaLink="true">http://iyoung.xyz/spring/0x08.html</guid><category><![CDATA[Spring]]></category><dc:creator><![CDATA[iYoung]]></dc:creator><pubDate>Tue, 11 May 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[【Spring源码学习】0x07 BeanDefinition加载之spring-beans.xsd文件]]></title><description><![CDATA[<h2 id="场景"><a class="header-anchor" href="#场景">#</a> 场景</h2>
<p>上篇介绍了Spring XML配置文件的校验是怎么做的，提到了XSD文件，那这个就来看看这个<code>spring-beans.xsd</code>文件到底定义了什么？我在配置Spring的时候，都能配置哪些东西？</p>
]]></description><link>http://iyoung.xyz/spring/0x07.html</link><guid isPermaLink="true">http://iyoung.xyz/spring/0x07.html</guid><category><![CDATA[Spring]]></category><dc:creator><![CDATA[iYoung]]></dc:creator><pubDate>Mon, 10 May 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[【Spring源码学习】0x06 BeanDefinition加载之XML校验]]></title><description><![CDATA[<p>前面容器初始化过程已经分析结束，大致流程清楚了，但是屏蔽了太多细节，现在就看看BeanDefinition加载的过程中，XML是如何校验的。</p>
]]></description><link>http://iyoung.xyz/spring/0x06.html</link><guid isPermaLink="true">http://iyoung.xyz/spring/0x06.html</guid><category><![CDATA[Spring]]></category><dc:creator><![CDATA[iYoung]]></dc:creator><pubDate>Sat, 08 May 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[【Spring源码学习】0x05 ClassPathXmlApplicationContext 类图]]></title><description><![CDATA[<p>在上篇中，学习了容器初始化过程，发现里面各种继承，各种委托，所以这里就整理一下这些出现的接口以及实现类的关系。</p>
]]></description><link>http://iyoung.xyz/spring/0x05.html</link><guid isPermaLink="true">http://iyoung.xyz/spring/0x05.html</guid><category><![CDATA[Spring]]></category><dc:creator><![CDATA[iYoung]]></dc:creator><pubDate>Thu, 06 May 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[【Spring源码学习】0x04 容器初始化]]></title><description><![CDATA[<h2 id="场景"><a class="header-anchor" href="#场景">#</a> 场景</h2>
<p>这里设定一个场景，不使用任何注解，仅使用XML配置，而且仅有一个平平无奇的实现类，如何交由Spring容器进行管理？</p>
]]></description><link>http://iyoung.xyz/spring/0x04.html</link><guid isPermaLink="true">http://iyoung.xyz/spring/0x04.html</guid><category><![CDATA[Spring]]></category><dc:creator><![CDATA[iYoung]]></dc:creator><pubDate>Wed, 05 May 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[【Spring源码学习】0x03 SPI 机制]]></title><description><![CDATA[<p>Spring环境搞好了，先不着急，还是先看一下这个<code>SPI</code>，Spring 中大量使用了<code>SPI</code>机制，所以先来学习下这个<code>SPI</code>。</p>
]]></description><link>http://iyoung.xyz/spring/0x03.html</link><guid isPermaLink="true">http://iyoung.xyz/spring/0x03.html</guid><category><![CDATA[Spring]]></category><dc:creator><![CDATA[iYoung]]></dc:creator><pubDate>Tue, 04 May 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[【Spring源码学习】0x02 源码搭建]]></title><description><![CDATA[<p>要学习Spring源码，肯定要有个源码环境了，搭建Spring源码有以下几种方式：</p>
]]></description><link>http://iyoung.xyz/spring/0x02.html</link><guid isPermaLink="true">http://iyoung.xyz/spring/0x02.html</guid><category><![CDATA[Spring]]></category><dc:creator><![CDATA[iYoung]]></dc:creator><pubDate>Mon, 03 May 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[【Spring源码学习】0x01 概览]]></title><description><![CDATA[<p>Spring Framework 东西很多，大致可以分为一下几个部分：</p>
]]></description><link>http://iyoung.xyz/spring/0x01.html</link><guid isPermaLink="true">http://iyoung.xyz/spring/0x01.html</guid><category><![CDATA[Spring]]></category><dc:creator><![CDATA[iYoung]]></dc:creator><pubDate>Sun, 02 May 2021 16:00:00 GMT</pubDate></item><item><title><![CDATA[【Spring源码学习】0x00 开篇]]></title><description><![CDATA[<p>近来，想要系统地学习下 Spring Framework 框架源码，觉得有必要把学习过程记录下来，一方面形成文字的过程也是思考的过程，另一方面也能对学习过程追溯和勘误，这就是这个系列文章的动机。</p>
]]></description><link>http://iyoung.xyz/spring/0x00.html</link><guid isPermaLink="true">http://iyoung.xyz/spring/0x00.html</guid><category><![CDATA[Spring]]></category><dc:creator><![CDATA[iYoung]]></dc:creator><pubDate>Sat, 01 May 2021 16:00:00 GMT</pubDate></item></channel></rss>